name: Continuous Integration (CI)
 
on: 
  pull_request:
    branches:
      - master
 
jobs:
  test:
    runs-on: ubuntu-latest
 
    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
 
     # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.PGPASSWORD }}
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:${{ secrets.POSTGRES_PORT }}

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: npm install migrate and test
      run: |
        npm install
        npm run migrate up
        npm run test
      env:
        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
        POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
        PGHOST_TEST: ${{ secrets.PGHOST_TEST }}
        PGUSER_TEST: ${{ secrets.PGUSER_TEST }}
        PGDATABASE_TEST: ${{ secrets.PGDATABASE_TEST }}
        PGPASSWORD_TEST: ${{ secrets.PGPASSWORD_TEST }}
        PGPORT_TEST: ${{ secrets.PGPORT_TEST }}
        PGHOST: ${{ secrets.PGHOST }}
        PGUSER: ${{ secrets.PGUSER }}
        PGDATABASE: ${{ secrets.PGDATABASE }}
        PGPASSWORD: ${{ secrets.PGPASSWORD }}
        PGPORT: ${{ secrets.PGPORT }}
        ACCESS_TOKEN_KEY: ${{ secrets.ACCESS_TOKEN_KEY }}
        REFRESH_TOKEN_KEY: ${{ secrets.REFRESH_TOKEN_KEY }}
        ACCCESS_TOKEN_AGE: ${{ secrets.ACCCESS_TOKEN_AGE }}